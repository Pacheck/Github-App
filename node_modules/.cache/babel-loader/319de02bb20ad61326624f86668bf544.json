{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pache\\\\Desktop\\\\GitHub App\\\\app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './css/index.css';\nimport AppContent from './components/app-content';\nimport ajax from '@fdaciuk/ajax';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userinfo: null,\n      repos: [],\n      starred: []\n    };\n  } // getStarred() {\n  //   console.log('favoritos');\n  // }\n\n\n  handleSearch(e) {\n    const value = e.target.value;\n    const keyCode = e.which || e.keyCode;\n    const ENTER = 13;\n\n    if (keyCode === ENTER) {\n      ajax() //Criar os componentes dos botoes\n      //Adicionar os dados da api pelo botao no card\n      .get(`https://api.github.com/users/${value}`).then(result => {\n        this.setState({\n          userinfo: {\n            username: result.name,\n            photo: result.avatar_url,\n            login: result.login,\n            repos: result.public_repos,\n            followers: result.followers,\n            following: result.following\n          }\n        });\n        console.log(result);\n      });\n    } //return value;\n\n  }\n\n  getRepos(type) {\n    return e => {\n      console.log('type:' + type);\n      ajax().get(`https://api.github.com/users/${value}/${type}`).then(result => {\n        this.setState({\n          [type]: [{\n            name: result[0].name,\n            link: result[0].html_url\n          }]\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppContent, {\n      userinfo: this.state.userinfo,\n      repos: this.state.repos,\n      starred: this.state.starred,\n      handleSearch: e => this.handleSearch(e),\n      getRepos: this.getRepos('repos'),\n      getStarred: this.getRepos('starred'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pache/Desktop/GitHub App/app/src/App.js"],"names":["React","Component","AppContent","ajax","App","constructor","state","userinfo","repos","starred","handleSearch","e","value","target","keyCode","which","ENTER","get","then","result","setState","username","name","photo","avatar_url","login","public_repos","followers","following","console","log","getRepos","type","link","html_url","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD,GARyB,CAU1B;AACA;AACA;;;AAEAC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,OAAO,GAAGH,CAAC,CAACI,KAAF,IAAWJ,CAAC,CAACG,OAA7B;AACA,UAAME,KAAK,GAAG,EAAd;;AACA,QAAIF,OAAO,KAAKE,KAAhB,EAAuB;AACrBb,MAAAA,IAAI,GACF;AACA;AAFE,OAIDc,GAJH,CAIQ,gCAA+BL,KAAM,EAJ7C,EAKGM,IALH,CAKSC,MAAD,IAAY;AAChB,aAAKC,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAE;AACRc,YAAAA,QAAQ,EAAEF,MAAM,CAACG,IADT;AAERC,YAAAA,KAAK,EAAEJ,MAAM,CAACK,UAFN;AAGRC,YAAAA,KAAK,EAAEN,MAAM,CAACM,KAHN;AAIRjB,YAAAA,KAAK,EAAEW,MAAM,CAACO,YAJN;AAKRC,YAAAA,SAAS,EAAER,MAAM,CAACQ,SALV;AAMRC,YAAAA,SAAS,EAAET,MAAM,CAACS;AANV;AADE,SAAd;AAUAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACD,OAjBH;AAkBD,KAvBa,CAwBd;;AACD;;AAEDY,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,WAAQrB,CAAD,IAAO;AACZkB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUE,IAAtB;AACA7B,MAAAA,IAAI,GACDc,GADH,CACQ,gCAA+BL,KAAM,IAAGoB,IAAK,EADrD,EAEGd,IAFH,CAESC,MAAD,IAAY;AAChB,aAAKC,QAAL,CAAc;AACZ,WAACY,IAAD,GAAQ,CACN;AACEV,YAAAA,IAAI,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUG,IADlB;AAEEW,YAAAA,IAAI,EAAEd,MAAM,CAAC,CAAD,CAAN,CAAUe;AAFlB,WADM;AADI,SAAd;AAQD,OAXH;AAYD,KAdD;AAeD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWC,QADvB;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHtB;AAIE,MAAA,YAAY,EAAGE,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKoB,QAAL,CAAc,OAAd,CALZ;AAME,MAAA,UAAU,EAAE,KAAKA,QAAL,CAAc,SAAd,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAtEyB;;AAyE5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './css/index.css';\nimport AppContent from './components/app-content';\nimport ajax from '@fdaciuk/ajax';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userinfo: null,\n      repos: [],\n      starred: [],\n    };\n  }\n\n  // getStarred() {\n  //   console.log('favoritos');\n  // }\n\n  handleSearch(e) {\n    const value = e.target.value;\n    const keyCode = e.which || e.keyCode;\n    const ENTER = 13;\n    if (keyCode === ENTER) {\n      ajax()\n        //Criar os componentes dos botoes\n        //Adicionar os dados da api pelo botao no card\n\n        .get(`https://api.github.com/users/${value}`)\n        .then((result) => {\n          this.setState({\n            userinfo: {\n              username: result.name,\n              photo: result.avatar_url,\n              login: result.login,\n              repos: result.public_repos,\n              followers: result.followers,\n              following: result.following,\n            },\n          });\n          console.log(result);\n        });\n    }\n    //return value;\n  }\n\n  getRepos(type) {\n    return (e) => {\n      console.log('type:' + type);\n      ajax()\n        .get(`https://api.github.com/users/${value}/${type}`)\n        .then((result) => {\n          this.setState({\n            [type]: [\n              {\n                name: result[0].name,\n                link: result[0].html_url,\n              },\n            ],\n          });\n        });\n    };\n  }\n\n  render() {\n    return (\n      <AppContent\n        userinfo={this.state.userinfo}\n        repos={this.state.repos}\n        starred={this.state.starred}\n        handleSearch={(e) => this.handleSearch(e)}\n        getRepos={this.getRepos('repos')}\n        getStarred={this.getRepos('starred')}\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}